OPTION(PONYPROG_INSTALL_AQSIS "Include Aqsis in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_BOOST "Include Boost in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_CGKIT "Include cgkit in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_GTKMM "Include gtkmm in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_PYGTK "Include PyGTK in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_PYOPENGL "Include PyOpenGL in the Ponyprog installer" OFF)
OPTION(PONYPROG_INSTALL_PYTHON "Include Python in the Ponyprog installer" OFF)

PONYPROG_CHECK_INSTALLED_PYTHON_DEPENDENCY(PONYPROG_INSTALL_CGKIT)
PONYPROG_CHECK_INSTALLED_PYTHON_DEPENDENCY(PONYPROG_INSTALL_PYGTK)
PONYPROG_CHECK_INSTALLED_PYTHON_DEPENDENCY(PONYPROG_INSTALL_PYOPENGL)

#install mingwm10.dll
FIND_PROGRAM(PONYPROG_MINGW_GCC mingw32-gcc.exe
	C:/mingw/bin
	DOC "Path to the MinGW GCC command")
MARK_AS_ADVANCED(PONYPROG_MINGW_GCC)

GET_FILENAME_COMPONENT(PONYPROG_MINGW_PATH ${PONYPROG_MINGW_GCC} PATH)
INSTALL(FILES ${PONYPROG_MINGW_PATH}/mingwm10.dll DESTINATION bin)

IF(PONYPROG_INSTALL_AQSIS)
	FIND_PROGRAM(PONYPROG_AQSIS_COMMAND aqsis.exe
		DOC "Path to an installed aqsis.exe."
		)
	MARK_AS_ADVANCED(PONYPROG_AQSIS_COMMAND)

	IF(NOT PONYPROG_AQSIS_COMMAND)
		MESSAGE(SEND_ERROR "Could not locate aqsis.exe.")
	ENDIF(NOT PONYPROG_AQSIS_COMMAND)

	IF(NOT PONYPROG_BUILD_BUNDLED_RENDERMAN_ENGINES_MODULE)
		MESSAGE(SEND_ERROR "PONYPROG_INSTALL_AQSIS requires PONYPROG_BUILD_BUNDLED_RENDERMAN_ENGINES_MODULE")
	ENDIF(NOT PONYPROG_BUILD_BUNDLED_RENDERMAN_ENGINES_MODULE)

	EXECUTE_PROCESS(
		COMMAND ${PONYPROG_AQSIS_COMMAND} --version
		OUTPUT_VARIABLE PONYPROG_AQSIS_VERSION
		)
	IF(PONYPROG_AQSIS_VERSION)
		STRING(REGEX REPLACE " \\(revision.*" "" PONYPROG_AQSIS_VERSION ${PONYPROG_AQSIS_VERSION})
		STRING(REGEX REPLACE "aqsis version " "" PONYPROG_AQSIS_VERSION ${PONYPROG_AQSIS_VERSION})
		PONYPROG_CHECK_INSTALLED_VERSION(${PONYPROG_AQSIS_VERSION} "Aqsis" "1.6.0")
	ELSE(PONYPROG_AQSIS_VERSION)
		MESSAGE(SEND_ERROR "Error determining Aqsis version.")
	ENDIF(PONYPROG_AQSIS_VERSION)

	GET_FILENAME_COMPONENT(PONYPROG_AQSIS_PATH ${PONYPROG_AQSIS_COMMAND} PATH)
	INSTALL(DIRECTORY ${PONYPROG_AQSIS_PATH}/ DESTINATION bin
	    USE_SOURCE_PERMISSIONS
	    PATTERN aqsisrc EXCLUDE
		)
	# Install generic aqsisrc, omitting paths (those are set at runtime through command line options)
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/aqsisrc DESTINATION bin)
	#install msvcrt, needed since aqsis 1.4
	FIND_PROGRAM(VCREDIST_X86_2005 vcredist_x86_2005.exe DOC "Path to the Visual Studio C++ 2005 SP1 redistributable")
	INSTALL(FILES ${VCREDIST_X86_2005} DESTINATION redist)
	SET(CPACK_NSIS_EXTRA_INSTALL_COMMANDS
		"ExecWait '\\\"$INSTDIR\\\\redist\\\\vcredist_x86_2005.exe\\\"'")
ENDIF(PONYPROG_INSTALL_AQSIS)

IF(PONYPROG_INSTALL_BOOST)
	set(aPrevBoostLib "")
    foreach(aBoostLib ${Boost_LIBRARIES})
        if(NOT (aBoostLib STREQUAL "debug" OR aBoostLib STREQUAL "optimized" OR aPrevBoostLib STREQUAL "debug"))
            INSTALL(FILES ${aBoostLib} DESTINATION bin)
        endif()
        set(aPrevBoostLib ${aBoostLib})
    endforeach(aBoostLib)
ENDIF(PONYPROG_INSTALL_BOOST)

IF(PONYPROG_BUILD_COLLADA_IO_MODULE)
    INSTALL(FILES ${PONYPROG_COLLADA_LIBRARY} DESTINATION bin)
ENDIF(PONYPROG_BUILD_COLLADA_IO_MODULE)

IF(PONYPROG_INSTALL_GTKMM)
	INCLUDE(PONYPROGDFindPkgConfig)
	
	PKG_CHECK_MODULES(ATK atk)
	PKG_CHECK_MODULES(ATKMM atkmm-1.6)
	PKG_CHECK_MODULES(CAIRO cairo)
	PKG_CHECK_MODULES(CAIROMM cairomm-1.0)
	PKG_CHECK_MODULES(GDK gdk-2.0)
	PKG_CHECK_MODULES(GDKGLEXT gdkglext-1.0)
	PKG_CHECK_MODULES(GDKGLEXTW gdkglext-win32-1.0)
	PKG_CHECK_MODULES(GDKMM gdkmm-2.4)
	PKG_CHECK_MODULES(GTK gtk+-2.0)
	PKG_CHECK_MODULES(GTKMM gtkmm-2.4)

	PONYPROG_CHECK_INSTALLED_VERSION(${ATK_VERSION} "atk" "1.24.0")
	PONYPROG_CHECK_INSTALLED_VERSION(${ATKMM_VERSION} "atkmm" "2.14.3")
	PONYPROG_CHECK_INSTALLED_VERSION(${CAIRO_VERSION} "cairo" "1.8.6")
	PONYPROG_CHECK_INSTALLED_VERSION(${CAIROMM_VERSION} "cairomm" "1.8.0")
	PONYPROG_CHECK_INSTALLED_VERSION(${GDK_VERSION} "gdk" "2.14.7")
	PONYPROG_CHECK_INSTALLED_VERSION(${GDKGLEXT_VERSION} "gdkglext" "1.2.0")
	PONYPROG_CHECK_INSTALLED_VERSION(${GDKGLEXTW_VERSION} "gdkglext-win32" "1.2.0")
	PONYPROG_CHECK_INSTALLED_VERSION(${GDKMM_VERSION} "gdkmm" "2.14.3")
	PONYPROG_CHECK_INSTALLED_VERSION(${GTK_VERSION} "gtk" "2.14.7")
	PONYPROG_CHECK_INSTALLED_VERSION(${GTKMM_VERSION} "gtkmm" "2.14.3")

	# This is an ugly hack, we should be able to detect this automatically, but I'm feeling lazy ...
	SET(PONYPROG_GTK_DIR "c:/gtk" CACHE PATH "Root directory containing GTK/gtkmm")
	MARK_AS_ADVANCED(PONYPROG_GTK_DIR)

	INSTALL(DIRECTORY ${PONYPROG_GTK_DIR}/bin/ DESTINATION bin
		USE_SOURCE_PERMISSIONS
		PATTERN *.pdb EXCLUDE
		PATTERN *-config EXCLUDE
		PATTERN *glade* EXCLUDE
		PATTERN *xml++* EXCLUDE
		PATTERN atkmm-1.6d.dll EXCLUDE
		PATTERN gdkmm-2.4d.dll EXCLUDE
		PATTERN gettext.sh EXCLUDE
		PATTERN glib-gettextize EXCLUDE
		PATTERN glib-mkenums EXCLUDE
		PATTERN glibmm-2.4d.dll EXCLUDE
		PATTERN gtkaio.sh EXCLUDE
		PATTERN gtkautogen EXCLUDE
		PATTERN gtkconfigure EXCLUDE
		PATTERN gtkmm-2.4d.dll EXCLUDE
		PATTERN msg*.exe EXCLUDE
		PATTERN pangomm-1.4d.dll EXCLUDE
		PATTERN sigc-2.0d.dll EXCLUDE
		)

	INSTALL(DIRECTORY ${PONYPROG_GTK_DIR}/etc/ DESTINATION etc
		USE_SOURCE_PERMISSIONS
		)

	INSTALL(DIRECTORY ${PONYPROG_GTK_DIR}/lib/ DESTINATION ${PONYPROG_LIBDIR}
		USE_SOURCE_PERMISSIONS
		PATTERN *.a EXCLUDE
		PATTERN *.lib EXCLUDE
		PATTERN *.pdb EXCLUDE
		PATTERN *glade* EXCLUDE
		PATTERN gdkmm-2.4 EXCLUDE
		PATTERN glib-2.0 EXCLUDE
		PATTERN glibmm-2.4 EXCLUDE
		PATTERN gtkglext-1.0 EXCLUDE
		PATTERN gtkmm-2.4 EXCLUDE
		PATTERN include EXCLUDE
		PATTERN libxml++-2.6 EXCLUDE
		PATTERN pkgconfig EXCLUDE
		PATTERN sigc++-2.0 EXCLUDE
		)

	# Override the default gtkrc file with our own
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/gtkrc DESTINATION etc/gtk-2.0)
ENDIF(PONYPROG_INSTALL_GTKMM)

IF(PONYPROG_INSTALL_PYTHON)
	FIND_PROGRAM(PONYPROG_PYTHON_COMMAND python.exe
		PATHS "c:/python26"
		DOC "Path to an installed python.exe."
		)
	MARK_AS_ADVANCED(PONYPROG_PYTHON_COMMAND)
	
	IF(NOT PONYPROG_PYTHON_COMMAND)
		MESSAGE(SEND_ERROR "Could not locate python.exe.")
	ENDIF(NOT PONYPROG_PYTHON_COMMAND)

	FIND_PROGRAM(PONYPROG_PYTHON_LIBRARY python26.dll
		DOC "Path to the installed python26.dll"
		)
	MARK_AS_ADVANCED(PONYPROG_PYTHON_LIBRARY)

	IF(NOT PONYPROG_PYTHON_LIBRARY)
		MESSAGE(SEND_ERROR "Could not locate python26.dll.")
	ENDIF(NOT PONYPROG_PYTHON_LIBRARY)

	EXECUTE_PROCESS(
		COMMAND ${PONYPROG_PYTHON_COMMAND} -V
		ERROR_VARIABLE PONYPROG_PYTHON_VERSION
		)

	IF(PONYPROG_PYTHON_VERSION)
		STRING(REGEX REPLACE "^Python ([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1" PONYPROG_PYTHON_VERSION ${PONYPROG_PYTHON_VERSION})
		PONYPROG_CHECK_INSTALLED_VERSION(${PONYPROG_PYTHON_VERSION} "Python" "2.6.1")
	ELSE(PONYPROG_PYTHON_VERSION)
		MESSAGE(SEND_ERROR "Error determining Python version.")
	ENDIF(PONYPROG_PYTHON_VERSION)

	INSTALL(PROGRAMS
		${PONYPROG_PYTHON_COMMAND}
		${PONYPROG_PYTHON_LIBRARY}
		DESTINATION bin
		)

	GET_FILENAME_COMPONENT(PONYPROG_PYTHON_PATH ${PONYPROG_PYTHON_COMMAND} PATH)
	FILE(GLOB PONYPROG_PYTHON_MODULES ${PONYPROG_PYTHON_PATH}/Lib/*.py)
	INSTALL(PROGRAMS
		${PONYPROG_PYTHON_MODULES}
		DESTINATION ${PONYPROG_LIBDIR}
		)

	SET(PONYPROG_PYTHON_SITE_PACKAGES ${PONYPROG_PYTHON_PATH}/Lib/site-packages)

	IF(PONYPROG_INSTALL_CGKIT)
		EXECUTE_PROCESS(
			COMMAND ${PONYPROG_PYTHON_COMMAND} -c "import cgkit.cgkitinfo;print cgkit.cgkitinfo.version"
			OUTPUT_VARIABLE PONYPROG_CGKIT_VERSION
			)

		IF(PONYPROG_CGKIT_VERSION)
			STRING(REGEX REPLACE "^([0-9]+\\.[0-9]+\\.[0-9]+[^ ]*).*" "\\1" PONYPROG_CGKIT_VERSION ${PONYPROG_CGKIT_VERSION})
			PONYPROG_CHECK_INSTALLED_VERSION(${PONYPROG_CGKIT_VERSION} "cgkit" "2.0.0alpha8")
		ELSE(PONYPROG_CGKIT_VERSION)
			MESSAGE(SEND_ERROR "Error determining cgkit version.")
		ENDIF(PONYPROG_CGKIT_VERSION)

		INSTALL(DIRECTORY
			${PONYPROG_PYTHON_SITE_PACKAGES}/cgkit
			DESTINATION ${PONYPROG_LIBDIR}/site-packages
			PATTERN *.pyc EXCLUDE
			PATTERN *.pyo EXCLUDE
			)
	ENDIF(PONYPROG_INSTALL_CGKIT)

	IF(PONYPROG_INSTALL_PYGTK)
		EXECUTE_PROCESS(
			COMMAND ${PONYPROG_PYTHON_COMMAND} -c "import gtk;print gtk.pygtk_version"
			OUTPUT_VARIABLE PONYPROG_PYGTK_VERSION
			)

		IF(PONYPROG_PYGTK_VERSION)
			STRING(REGEX REPLACE ".*([0-9]+), ([0-9]+), ([0-9]+).*" "\\1.\\2.\\3" PONYPROG_PYGTK_VERSION ${PONYPROG_PYGTK_VERSION})
			PONYPROG_CHECK_INSTALLED_VERSION(${PONYPROG_PYGTK_VERSION} "PyGTK" "2.12.1")
		ELSE(PONYPROG_PYGTK_VERSION)
			MESSAGE(SEND_ERROR "Error determining PyGTK version.")
		ENDIF(PONYPROG_PYGTK_VERSION)

		INSTALL(DIRECTORY
			${PONYPROG_PYTHON_SITE_PACKAGES}/cairo
			DESTINATION ${PONYPROG_LIBDIR}/site-packages
			PATTERN *.pyc EXCLUDE
			PATTERN *.pyo EXCLUDE
			)
		INSTALL(DIRECTORY
			${PONYPROG_PYTHON_SITE_PACKAGES}/gtk-2.0
			DESTINATION ${PONYPROG_LIBDIR}/site-packages
			PATTERN *.pyc EXCLUDE
			PATTERN *.pyo EXCLUDE
			)
		INSTALL(PROGRAMS
			${PONYPROG_PYTHON_SITE_PACKAGES}/pygtk.py
			DESTINATION ${PONYPROG_LIBDIR}/site-packages
			)
	ENDIF(PONYPROG_INSTALL_PYGTK)

	IF(PONYPROG_INSTALL_PYOPENGL)
		EXECUTE_PROCESS(
			COMMAND ${PONYPROG_PYTHON_COMMAND} -c "import OpenGL.version;print OpenGL.version.__version__"
			OUTPUT_VARIABLE PONYPROG_PYOPENGL_VERSION
			)
		IF(PONYPROG_PYOPENGL_VERSION)
			STRING(REGEX REPLACE "^([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1" PONYPROG_PYOPENGL_VERSION ${PONYPROG_PYOPENGL_VERSION})
			PONYPROG_CHECK_INSTALLED_VERSION(${PONYPROG_PYOPENGL_VERSION} "PyOpenGL" "3.0.0")
		ELSE(PONYPROG_PYOPENGL_VERSION)
			MESSAGE(SEND_ERROR "Error determining PyOpenGL version.")
		ENDIF(PONYPROG_PYOPENGL_VERSION)

		INSTALL(DIRECTORY
			${PONYPROG_PYTHON_SITE_PACKAGES}/OpenGL
			DESTINATION ${PONYPROG_LIBDIR}/site-packages
			PATTERN *.pyc EXCLUDE
			PATTERN *.pyo EXCLUDE
			)
	ENDIF(PONYPROG_INSTALL_PYOPENGL)

	#Needed for Python 2.6
	FIND_PROGRAM(VCREDIST_X86_2008 vcredist_x86_2008.exe DOC "Path to the Visual Studio C++ 2008 SP1 redistributable")
	INSTALL(FILES ${VCREDIST_X86_2008} DESTINATION redist)
	SET(CPACK_NSIS_EXTRA_INSTALL_COMMANDS
		"${CPACK_NSIS_EXTRA_INSTALL_COMMANDS}
			ExecWait '\\\"$INSTDIR\\\\redist\\\\vcredist_x86_2008.exe\\\"'")

ENDIF(PONYPROG_INSTALL_PYTHON)

ADD_SUBDIRECTORY(nsis)

